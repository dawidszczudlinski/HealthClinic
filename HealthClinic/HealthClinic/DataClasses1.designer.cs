#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HealthClinic
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HealthClinic")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBadanie(Badanie instance);
    partial void UpdateBadanie(Badanie instance);
    partial void DeleteBadanie(Badanie instance);
    partial void InsertKierownik_Laboratorium(Kierownik_Laboratorium instance);
    partial void UpdateKierownik_Laboratorium(Kierownik_Laboratorium instance);
    partial void DeleteKierownik_Laboratorium(Kierownik_Laboratorium instance);
    partial void InsertKonto(Konto instance);
    partial void UpdateKonto(Konto instance);
    partial void DeleteKonto(Konto instance);
    partial void InsertLaborant(Laborant instance);
    partial void UpdateLaborant(Laborant instance);
    partial void DeleteLaborant(Laborant instance);
    partial void InsertPacjent(Pacjent instance);
    partial void UpdatePacjent(Pacjent instance);
    partial void DeletePacjent(Pacjent instance);
    partial void InsertLekarz(Lekarz instance);
    partial void UpdateLekarz(Lekarz instance);
    partial void DeleteLekarz(Lekarz instance);
    partial void InsertRejestratorka(Rejestratorka instance);
    partial void UpdateRejestratorka(Rejestratorka instance);
    partial void DeleteRejestratorka(Rejestratorka instance);
    partial void InsertSlownik_badan(Slownik_badan instance);
    partial void UpdateSlownik_badan(Slownik_badan instance);
    partial void DeleteSlownik_badan(Slownik_badan instance);
    partial void InsertWizyta(Wizyta instance);
    partial void UpdateWizyta(Wizyta instance);
    partial void DeleteWizyta(Wizyta instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::HealthClinic.Properties.Settings.Default.HealthClinicConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Badanie> Badanies
		{
			get
			{
				return this.GetTable<Badanie>();
			}
		}
		
		public System.Data.Linq.Table<Kierownik_Laboratorium> Kierownik_Laboratoriums
		{
			get
			{
				return this.GetTable<Kierownik_Laboratorium>();
			}
		}
		
		public System.Data.Linq.Table<Konto> Kontos
		{
			get
			{
				return this.GetTable<Konto>();
			}
		}
		
		public System.Data.Linq.Table<Laborant> Laborants
		{
			get
			{
				return this.GetTable<Laborant>();
			}
		}
		
		public System.Data.Linq.Table<Pacjent> Pacjents
		{
			get
			{
				return this.GetTable<Pacjent>();
			}
		}
		
		public System.Data.Linq.Table<Lekarz> Lekarzs
		{
			get
			{
				return this.GetTable<Lekarz>();
			}
		}
		
		public System.Data.Linq.Table<Rejestratorka> Rejestratorkas
		{
			get
			{
				return this.GetTable<Rejestratorka>();
			}
		}
		
		public System.Data.Linq.Table<Slownik_badan> Slownik_badans
		{
			get
			{
				return this.GetTable<Slownik_badan>();
			}
		}
		
		public System.Data.Linq.Table<Wizyta> Wizytas
		{
			get
			{
				return this.GetTable<Wizyta>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Badanie")]
	public partial class Badanie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_bad;
		
		private System.DateTime _Dt_zle;
		
		private System.Nullable<System.DateTime> _Dt_wyk_anul;
		
		private string _Opis;
		
		private string _Wynik;
		
		private string _Uwagi;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _Dt_zatw_anul;
		
		private int _Kod;
		
		private System.Nullable<int> _ID_lab;
		
		private System.Nullable<int> _ID_Klab;
		
		private int _ID_wiz;
		
		private EntityRef<Kierownik_Laboratorium> _Kierownik_Laboratorium;
		
		private EntityRef<Laborant> _Laborant;
		
		private EntityRef<Slownik_badan> _Slownik_badan;
		
		private EntityRef<Wizyta> _Wizyta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_badChanging(int value);
    partial void OnID_badChanged();
    partial void OnDt_zleChanging(System.DateTime value);
    partial void OnDt_zleChanged();
    partial void OnDt_wyk_anulChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_wyk_anulChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    partial void OnWynikChanging(string value);
    partial void OnWynikChanged();
    partial void OnUwagiChanging(string value);
    partial void OnUwagiChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnDt_zatw_anulChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_zatw_anulChanged();
    partial void OnKodChanging(int value);
    partial void OnKodChanged();
    partial void OnID_labChanging(System.Nullable<int> value);
    partial void OnID_labChanged();
    partial void OnID_KlabChanging(System.Nullable<int> value);
    partial void OnID_KlabChanged();
    partial void OnID_wizChanging(int value);
    partial void OnID_wizChanged();
    #endregion
		
		public Badanie()
		{
			this._Kierownik_Laboratorium = default(EntityRef<Kierownik_Laboratorium>);
			this._Laborant = default(EntityRef<Laborant>);
			this._Slownik_badan = default(EntityRef<Slownik_badan>);
			this._Wizyta = default(EntityRef<Wizyta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_bad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_bad
		{
			get
			{
				return this._ID_bad;
			}
			set
			{
				if ((this._ID_bad != value))
				{
					this.OnID_badChanging(value);
					this.SendPropertyChanging();
					this._ID_bad = value;
					this.SendPropertyChanged("ID_bad");
					this.OnID_badChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dt_zle", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_zle
		{
			get
			{
				return this._Dt_zle;
			}
			set
			{
				if ((this._Dt_zle != value))
				{
					this.OnDt_zleChanging(value);
					this.SendPropertyChanging();
					this._Dt_zle = value;
					this.SendPropertyChanged("Dt_zle");
					this.OnDt_zleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dt_wyk_anul", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_wyk_anul
		{
			get
			{
				return this._Dt_wyk_anul;
			}
			set
			{
				if ((this._Dt_wyk_anul != value))
				{
					this.OnDt_wyk_anulChanging(value);
					this.SendPropertyChanging();
					this._Dt_wyk_anul = value;
					this.SendPropertyChanged("Dt_wyk_anul");
					this.OnDt_wyk_anulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NVarChar(254)")]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wynik", DbType="NVarChar(254)")]
		public string Wynik
		{
			get
			{
				return this._Wynik;
			}
			set
			{
				if ((this._Wynik != value))
				{
					this.OnWynikChanging(value);
					this.SendPropertyChanging();
					this._Wynik = value;
					this.SendPropertyChanged("Wynik");
					this.OnWynikChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uwagi", DbType="NVarChar(254)")]
		public string Uwagi
		{
			get
			{
				return this._Uwagi;
			}
			set
			{
				if ((this._Uwagi != value))
				{
					this.OnUwagiChanging(value);
					this.SendPropertyChanging();
					this._Uwagi = value;
					this.SendPropertyChanged("Uwagi");
					this.OnUwagiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dt_zatw_anul", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_zatw_anul
		{
			get
			{
				return this._Dt_zatw_anul;
			}
			set
			{
				if ((this._Dt_zatw_anul != value))
				{
					this.OnDt_zatw_anulChanging(value);
					this.SendPropertyChanging();
					this._Dt_zatw_anul = value;
					this.SendPropertyChanged("Dt_zatw_anul");
					this.OnDt_zatw_anulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kod", DbType="Int NOT NULL")]
		public int Kod
		{
			get
			{
				return this._Kod;
			}
			set
			{
				if ((this._Kod != value))
				{
					if (this._Slownik_badan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKodChanging(value);
					this.SendPropertyChanging();
					this._Kod = value;
					this.SendPropertyChanged("Kod");
					this.OnKodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_lab", DbType="Int")]
		public System.Nullable<int> ID_lab
		{
			get
			{
				return this._ID_lab;
			}
			set
			{
				if ((this._ID_lab != value))
				{
					if (this._Laborant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_labChanging(value);
					this.SendPropertyChanging();
					this._ID_lab = value;
					this.SendPropertyChanged("ID_lab");
					this.OnID_labChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Klab", DbType="Int")]
		public System.Nullable<int> ID_Klab
		{
			get
			{
				return this._ID_Klab;
			}
			set
			{
				if ((this._ID_Klab != value))
				{
					if (this._Kierownik_Laboratorium.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KlabChanging(value);
					this.SendPropertyChanging();
					this._ID_Klab = value;
					this.SendPropertyChanged("ID_Klab");
					this.OnID_KlabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_wiz", DbType="Int NOT NULL")]
		public int ID_wiz
		{
			get
			{
				return this._ID_wiz;
			}
			set
			{
				if ((this._ID_wiz != value))
				{
					if (this._Wizyta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_wizChanging(value);
					this.SendPropertyChanging();
					this._ID_wiz = value;
					this.SendPropertyChanged("ID_wiz");
					this.OnID_wizChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kierownik_Laboratorium_Badanie", Storage="_Kierownik_Laboratorium", ThisKey="ID_Klab", OtherKey="ID_Klab", IsForeignKey=true)]
		public Kierownik_Laboratorium Kierownik_Laboratorium
		{
			get
			{
				return this._Kierownik_Laboratorium.Entity;
			}
			set
			{
				Kierownik_Laboratorium previousValue = this._Kierownik_Laboratorium.Entity;
				if (((previousValue != value) 
							|| (this._Kierownik_Laboratorium.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kierownik_Laboratorium.Entity = null;
						previousValue.Badanies.Remove(this);
					}
					this._Kierownik_Laboratorium.Entity = value;
					if ((value != null))
					{
						value.Badanies.Add(this);
						this._ID_Klab = value.ID_Klab;
					}
					else
					{
						this._ID_Klab = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kierownik_Laboratorium");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Laborant_Badanie", Storage="_Laborant", ThisKey="ID_lab", OtherKey="ID_lab", IsForeignKey=true)]
		public Laborant Laborant
		{
			get
			{
				return this._Laborant.Entity;
			}
			set
			{
				Laborant previousValue = this._Laborant.Entity;
				if (((previousValue != value) 
							|| (this._Laborant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Laborant.Entity = null;
						previousValue.Badanies.Remove(this);
					}
					this._Laborant.Entity = value;
					if ((value != null))
					{
						value.Badanies.Add(this);
						this._ID_lab = value.ID_lab;
					}
					else
					{
						this._ID_lab = default(Nullable<int>);
					}
					this.SendPropertyChanged("Laborant");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Slownik_badan_Badanie", Storage="_Slownik_badan", ThisKey="Kod", OtherKey="Kod", IsForeignKey=true)]
		public Slownik_badan Slownik_badan
		{
			get
			{
				return this._Slownik_badan.Entity;
			}
			set
			{
				Slownik_badan previousValue = this._Slownik_badan.Entity;
				if (((previousValue != value) 
							|| (this._Slownik_badan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Slownik_badan.Entity = null;
						previousValue.Badanies.Remove(this);
					}
					this._Slownik_badan.Entity = value;
					if ((value != null))
					{
						value.Badanies.Add(this);
						this._Kod = value.Kod;
					}
					else
					{
						this._Kod = default(int);
					}
					this.SendPropertyChanged("Slownik_badan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Wizyta_Badanie", Storage="_Wizyta", ThisKey="ID_wiz", OtherKey="ID_wiz", IsForeignKey=true)]
		public Wizyta Wizyta
		{
			get
			{
				return this._Wizyta.Entity;
			}
			set
			{
				Wizyta previousValue = this._Wizyta.Entity;
				if (((previousValue != value) 
							|| (this._Wizyta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Wizyta.Entity = null;
						previousValue.Badanies.Remove(this);
					}
					this._Wizyta.Entity = value;
					if ((value != null))
					{
						value.Badanies.Add(this);
						this._ID_wiz = value.ID_wiz;
					}
					else
					{
						this._ID_wiz = default(int);
					}
					this.SendPropertyChanged("Wizyta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kierownik_Laboratorium")]
	public partial class Kierownik_Laboratorium : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Klab;
		
		private string _Imie;
		
		private string _Nazwisko;
		
		private string _PESEL;
		
		private string _Adres;
		
		private EntitySet<Badanie> _Badanies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_KlabChanging(int value);
    partial void OnID_KlabChanged();
    partial void OnImieChanging(string value);
    partial void OnImieChanged();
    partial void OnNazwiskoChanging(string value);
    partial void OnNazwiskoChanged();
    partial void OnPESELChanging(string value);
    partial void OnPESELChanged();
    partial void OnAdresChanging(string value);
    partial void OnAdresChanged();
    #endregion
		
		public Kierownik_Laboratorium()
		{
			this._Badanies = new EntitySet<Badanie>(new Action<Badanie>(this.attach_Badanies), new Action<Badanie>(this.detach_Badanies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Klab", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Klab
		{
			get
			{
				return this._ID_Klab;
			}
			set
			{
				if ((this._ID_Klab != value))
				{
					this.OnID_KlabChanging(value);
					this.SendPropertyChanging();
					this._ID_Klab = value;
					this.SendPropertyChanged("ID_Klab");
					this.OnID_KlabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imie", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Imie
		{
			get
			{
				return this._Imie;
			}
			set
			{
				if ((this._Imie != value))
				{
					this.OnImieChanging(value);
					this.SendPropertyChanging();
					this._Imie = value;
					this.SendPropertyChanged("Imie");
					this.OnImieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwisko", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwisko
		{
			get
			{
				return this._Nazwisko;
			}
			set
			{
				if ((this._Nazwisko != value))
				{
					this.OnNazwiskoChanging(value);
					this.SendPropertyChanging();
					this._Nazwisko = value;
					this.SendPropertyChanged("Nazwisko");
					this.OnNazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PESEL", DbType="NVarChar(11)")]
		public string PESEL
		{
			get
			{
				return this._PESEL;
			}
			set
			{
				if ((this._PESEL != value))
				{
					this.OnPESELChanging(value);
					this.SendPropertyChanging();
					this._PESEL = value;
					this.SendPropertyChanged("PESEL");
					this.OnPESELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adres", DbType="NVarChar(250)")]
		public string Adres
		{
			get
			{
				return this._Adres;
			}
			set
			{
				if ((this._Adres != value))
				{
					this.OnAdresChanging(value);
					this.SendPropertyChanging();
					this._Adres = value;
					this.SendPropertyChanged("Adres");
					this.OnAdresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kierownik_Laboratorium_Badanie", Storage="_Badanies", ThisKey="ID_Klab", OtherKey="ID_Klab")]
		public EntitySet<Badanie> Badanies
		{
			get
			{
				return this._Badanies;
			}
			set
			{
				this._Badanies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Badanies(Badanie entity)
		{
			this.SendPropertyChanging();
			entity.Kierownik_Laboratorium = this;
		}
		
		private void detach_Badanies(Badanie entity)
		{
			this.SendPropertyChanging();
			entity.Kierownik_Laboratorium = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Konto")]
	public partial class Konto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Login;
		
		private string _Haslo;
		
		private int _ID;
		
		private string _rola;
		
		private System.DateTime _Dt_wygas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnHasloChanging(string value);
    partial void OnHasloChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnrolaChanging(string value);
    partial void OnrolaChanged();
    partial void OnDt_wygasChanging(System.DateTime value);
    partial void OnDt_wygasChanged();
    #endregion
		
		public Konto()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Haslo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Haslo
		{
			get
			{
				return this._Haslo;
			}
			set
			{
				if ((this._Haslo != value))
				{
					this.OnHasloChanging(value);
					this.SendPropertyChanging();
					this._Haslo = value;
					this.SendPropertyChanged("Haslo");
					this.OnHasloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rola", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string rola
		{
			get
			{
				return this._rola;
			}
			set
			{
				if ((this._rola != value))
				{
					this.OnrolaChanging(value);
					this.SendPropertyChanging();
					this._rola = value;
					this.SendPropertyChanged("rola");
					this.OnrolaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dt_wygas", DbType="Date NOT NULL")]
		public System.DateTime Dt_wygas
		{
			get
			{
				return this._Dt_wygas;
			}
			set
			{
				if ((this._Dt_wygas != value))
				{
					this.OnDt_wygasChanging(value);
					this.SendPropertyChanging();
					this._Dt_wygas = value;
					this.SendPropertyChanged("Dt_wygas");
					this.OnDt_wygasChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Laborant")]
	public partial class Laborant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_lab;
		
		private string _Imie;
		
		private string _Nazwisko;
		
		private string _PESEL;
		
		private string _Adres;
		
		private EntitySet<Badanie> _Badanies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_labChanging(int value);
    partial void OnID_labChanged();
    partial void OnImieChanging(string value);
    partial void OnImieChanged();
    partial void OnNazwiskoChanging(string value);
    partial void OnNazwiskoChanged();
    partial void OnPESELChanging(string value);
    partial void OnPESELChanged();
    partial void OnAdresChanging(string value);
    partial void OnAdresChanged();
    #endregion
		
		public Laborant()
		{
			this._Badanies = new EntitySet<Badanie>(new Action<Badanie>(this.attach_Badanies), new Action<Badanie>(this.detach_Badanies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_lab", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_lab
		{
			get
			{
				return this._ID_lab;
			}
			set
			{
				if ((this._ID_lab != value))
				{
					this.OnID_labChanging(value);
					this.SendPropertyChanging();
					this._ID_lab = value;
					this.SendPropertyChanged("ID_lab");
					this.OnID_labChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imie", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Imie
		{
			get
			{
				return this._Imie;
			}
			set
			{
				if ((this._Imie != value))
				{
					this.OnImieChanging(value);
					this.SendPropertyChanging();
					this._Imie = value;
					this.SendPropertyChanged("Imie");
					this.OnImieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwisko", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwisko
		{
			get
			{
				return this._Nazwisko;
			}
			set
			{
				if ((this._Nazwisko != value))
				{
					this.OnNazwiskoChanging(value);
					this.SendPropertyChanging();
					this._Nazwisko = value;
					this.SendPropertyChanged("Nazwisko");
					this.OnNazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PESEL", DbType="NVarChar(11)")]
		public string PESEL
		{
			get
			{
				return this._PESEL;
			}
			set
			{
				if ((this._PESEL != value))
				{
					this.OnPESELChanging(value);
					this.SendPropertyChanging();
					this._PESEL = value;
					this.SendPropertyChanged("PESEL");
					this.OnPESELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adres", DbType="NVarChar(250)")]
		public string Adres
		{
			get
			{
				return this._Adres;
			}
			set
			{
				if ((this._Adres != value))
				{
					this.OnAdresChanging(value);
					this.SendPropertyChanging();
					this._Adres = value;
					this.SendPropertyChanged("Adres");
					this.OnAdresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Laborant_Badanie", Storage="_Badanies", ThisKey="ID_lab", OtherKey="ID_lab")]
		public EntitySet<Badanie> Badanies
		{
			get
			{
				return this._Badanies;
			}
			set
			{
				this._Badanies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Badanies(Badanie entity)
		{
			this.SendPropertyChanging();
			entity.Laborant = this;
		}
		
		private void detach_Badanies(Badanie entity)
		{
			this.SendPropertyChanging();
			entity.Laborant = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pacjent")]
	public partial class Pacjent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_pac;
		
		private string _Imie;
		
		private string _Nazwisko;
		
		private string _PESEL;
		
		private string _Adres;
		
		private string _Nr_ubezpieczenia;
		
		private EntitySet<Wizyta> _Wizytas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_pacChanging(int value);
    partial void OnID_pacChanged();
    partial void OnImieChanging(string value);
    partial void OnImieChanged();
    partial void OnNazwiskoChanging(string value);
    partial void OnNazwiskoChanged();
    partial void OnPESELChanging(string value);
    partial void OnPESELChanged();
    partial void OnAdresChanging(string value);
    partial void OnAdresChanged();
    partial void OnNr_ubezpieczeniaChanging(string value);
    partial void OnNr_ubezpieczeniaChanged();
    #endregion
		
		public Pacjent()
		{
			this._Wizytas = new EntitySet<Wizyta>(new Action<Wizyta>(this.attach_Wizytas), new Action<Wizyta>(this.detach_Wizytas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_pac", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_pac
		{
			get
			{
				return this._ID_pac;
			}
			set
			{
				if ((this._ID_pac != value))
				{
					this.OnID_pacChanging(value);
					this.SendPropertyChanging();
					this._ID_pac = value;
					this.SendPropertyChanged("ID_pac");
					this.OnID_pacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imie", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Imie
		{
			get
			{
				return this._Imie;
			}
			set
			{
				if ((this._Imie != value))
				{
					this.OnImieChanging(value);
					this.SendPropertyChanging();
					this._Imie = value;
					this.SendPropertyChanged("Imie");
					this.OnImieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwisko", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwisko
		{
			get
			{
				return this._Nazwisko;
			}
			set
			{
				if ((this._Nazwisko != value))
				{
					this.OnNazwiskoChanging(value);
					this.SendPropertyChanging();
					this._Nazwisko = value;
					this.SendPropertyChanged("Nazwisko");
					this.OnNazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PESEL", DbType="NVarChar(11)")]
		public string PESEL
		{
			get
			{
				return this._PESEL;
			}
			set
			{
				if ((this._PESEL != value))
				{
					this.OnPESELChanging(value);
					this.SendPropertyChanging();
					this._PESEL = value;
					this.SendPropertyChanged("PESEL");
					this.OnPESELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adres", DbType="NVarChar(250)")]
		public string Adres
		{
			get
			{
				return this._Adres;
			}
			set
			{
				if ((this._Adres != value))
				{
					this.OnAdresChanging(value);
					this.SendPropertyChanging();
					this._Adres = value;
					this.SendPropertyChanged("Adres");
					this.OnAdresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nr_ubezpieczenia", DbType="NVarChar(30)")]
		public string Nr_ubezpieczenia
		{
			get
			{
				return this._Nr_ubezpieczenia;
			}
			set
			{
				if ((this._Nr_ubezpieczenia != value))
				{
					this.OnNr_ubezpieczeniaChanging(value);
					this.SendPropertyChanging();
					this._Nr_ubezpieczenia = value;
					this.SendPropertyChanged("Nr_ubezpieczenia");
					this.OnNr_ubezpieczeniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pacjent_Wizyta", Storage="_Wizytas", ThisKey="ID_pac", OtherKey="ID_pac")]
		public EntitySet<Wizyta> Wizytas
		{
			get
			{
				return this._Wizytas;
			}
			set
			{
				this._Wizytas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Wizytas(Wizyta entity)
		{
			this.SendPropertyChanging();
			entity.Pacjent = this;
		}
		
		private void detach_Wizytas(Wizyta entity)
		{
			this.SendPropertyChanging();
			entity.Pacjent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lekarz")]
	public partial class Lekarz : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_lek;
		
		private string _Imie;
		
		private string _Nazwisko;
		
		private string _PESEL;
		
		private string _Adres;
		
		private string _npwz;
		
		private EntitySet<Wizyta> _Wizytas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_lekChanging(int value);
    partial void OnID_lekChanged();
    partial void OnImieChanging(string value);
    partial void OnImieChanged();
    partial void OnNazwiskoChanging(string value);
    partial void OnNazwiskoChanged();
    partial void OnPESELChanging(string value);
    partial void OnPESELChanged();
    partial void OnAdresChanging(string value);
    partial void OnAdresChanged();
    partial void OnnpwzChanging(string value);
    partial void OnnpwzChanged();
    #endregion
		
		public Lekarz()
		{
			this._Wizytas = new EntitySet<Wizyta>(new Action<Wizyta>(this.attach_Wizytas), new Action<Wizyta>(this.detach_Wizytas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_lek", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_lek
		{
			get
			{
				return this._ID_lek;
			}
			set
			{
				if ((this._ID_lek != value))
				{
					this.OnID_lekChanging(value);
					this.SendPropertyChanging();
					this._ID_lek = value;
					this.SendPropertyChanged("ID_lek");
					this.OnID_lekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imie", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Imie
		{
			get
			{
				return this._Imie;
			}
			set
			{
				if ((this._Imie != value))
				{
					this.OnImieChanging(value);
					this.SendPropertyChanging();
					this._Imie = value;
					this.SendPropertyChanged("Imie");
					this.OnImieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwisko", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwisko
		{
			get
			{
				return this._Nazwisko;
			}
			set
			{
				if ((this._Nazwisko != value))
				{
					this.OnNazwiskoChanging(value);
					this.SendPropertyChanging();
					this._Nazwisko = value;
					this.SendPropertyChanged("Nazwisko");
					this.OnNazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PESEL", DbType="NVarChar(11)")]
		public string PESEL
		{
			get
			{
				return this._PESEL;
			}
			set
			{
				if ((this._PESEL != value))
				{
					this.OnPESELChanging(value);
					this.SendPropertyChanging();
					this._PESEL = value;
					this.SendPropertyChanged("PESEL");
					this.OnPESELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adres", DbType="NVarChar(250)")]
		public string Adres
		{
			get
			{
				return this._Adres;
			}
			set
			{
				if ((this._Adres != value))
				{
					this.OnAdresChanging(value);
					this.SendPropertyChanging();
					this._Adres = value;
					this.SendPropertyChanged("Adres");
					this.OnAdresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_npwz", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string npwz
		{
			get
			{
				return this._npwz;
			}
			set
			{
				if ((this._npwz != value))
				{
					this.OnnpwzChanging(value);
					this.SendPropertyChanging();
					this._npwz = value;
					this.SendPropertyChanged("npwz");
					this.OnnpwzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lekarz_Wizyta", Storage="_Wizytas", ThisKey="ID_lek", OtherKey="ID_lek")]
		public EntitySet<Wizyta> Wizytas
		{
			get
			{
				return this._Wizytas;
			}
			set
			{
				this._Wizytas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Wizytas(Wizyta entity)
		{
			this.SendPropertyChanging();
			entity.Lekarz = this;
		}
		
		private void detach_Wizytas(Wizyta entity)
		{
			this.SendPropertyChanging();
			entity.Lekarz = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rejestratorka")]
	public partial class Rejestratorka : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_rej;
		
		private string _Imie;
		
		private string _Nazwisko;
		
		private string _PESEL;
		
		private string _Adres;
		
		private EntitySet<Wizyta> _Wizytas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_rejChanging(int value);
    partial void OnID_rejChanged();
    partial void OnImieChanging(string value);
    partial void OnImieChanged();
    partial void OnNazwiskoChanging(string value);
    partial void OnNazwiskoChanged();
    partial void OnPESELChanging(string value);
    partial void OnPESELChanged();
    partial void OnAdresChanging(string value);
    partial void OnAdresChanged();
    #endregion
		
		public Rejestratorka()
		{
			this._Wizytas = new EntitySet<Wizyta>(new Action<Wizyta>(this.attach_Wizytas), new Action<Wizyta>(this.detach_Wizytas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_rej", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_rej
		{
			get
			{
				return this._ID_rej;
			}
			set
			{
				if ((this._ID_rej != value))
				{
					this.OnID_rejChanging(value);
					this.SendPropertyChanging();
					this._ID_rej = value;
					this.SendPropertyChanged("ID_rej");
					this.OnID_rejChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imie", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Imie
		{
			get
			{
				return this._Imie;
			}
			set
			{
				if ((this._Imie != value))
				{
					this.OnImieChanging(value);
					this.SendPropertyChanging();
					this._Imie = value;
					this.SendPropertyChanged("Imie");
					this.OnImieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwisko", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwisko
		{
			get
			{
				return this._Nazwisko;
			}
			set
			{
				if ((this._Nazwisko != value))
				{
					this.OnNazwiskoChanging(value);
					this.SendPropertyChanging();
					this._Nazwisko = value;
					this.SendPropertyChanged("Nazwisko");
					this.OnNazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PESEL", DbType="NVarChar(11)")]
		public string PESEL
		{
			get
			{
				return this._PESEL;
			}
			set
			{
				if ((this._PESEL != value))
				{
					this.OnPESELChanging(value);
					this.SendPropertyChanging();
					this._PESEL = value;
					this.SendPropertyChanged("PESEL");
					this.OnPESELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adres", DbType="NVarChar(250)")]
		public string Adres
		{
			get
			{
				return this._Adres;
			}
			set
			{
				if ((this._Adres != value))
				{
					this.OnAdresChanging(value);
					this.SendPropertyChanging();
					this._Adres = value;
					this.SendPropertyChanged("Adres");
					this.OnAdresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rejestratorka_Wizyta", Storage="_Wizytas", ThisKey="ID_rej", OtherKey="ID_rej")]
		public EntitySet<Wizyta> Wizytas
		{
			get
			{
				return this._Wizytas;
			}
			set
			{
				this._Wizytas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Wizytas(Wizyta entity)
		{
			this.SendPropertyChanging();
			entity.Rejestratorka = this;
		}
		
		private void detach_Wizytas(Wizyta entity)
		{
			this.SendPropertyChanging();
			entity.Rejestratorka = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Slownik_badan")]
	public partial class Slownik_badan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Kod;
		
		private string _Nazwa;
		
		private string _Opis;
		
		private EntitySet<Badanie> _Badanies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKodChanging(int value);
    partial void OnKodChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    #endregion
		
		public Slownik_badan()
		{
			this._Badanies = new EntitySet<Badanie>(new Action<Badanie>(this.attach_Badanies), new Action<Badanie>(this.detach_Badanies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kod", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Kod
		{
			get
			{
				return this._Kod;
			}
			set
			{
				if ((this._Kod != value))
				{
					this.OnKodChanging(value);
					this.SendPropertyChanging();
					this._Kod = value;
					this.SendPropertyChanged("Kod");
					this.OnKodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Slownik_badan_Badanie", Storage="_Badanies", ThisKey="Kod", OtherKey="Kod")]
		public EntitySet<Badanie> Badanies
		{
			get
			{
				return this._Badanies;
			}
			set
			{
				this._Badanies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Badanies(Badanie entity)
		{
			this.SendPropertyChanging();
			entity.Slownik_badan = this;
		}
		
		private void detach_Badanies(Badanie entity)
		{
			this.SendPropertyChanging();
			entity.Slownik_badan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Wizyta")]
	public partial class Wizyta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_wiz;
		
		private System.DateTime _Dt_rej;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _Dt_zak;
		
		private string _Opis;
		
		private string _Diagnoza;
		
		private int _ID_pac;
		
		private int _ID_rej;
		
		private int _ID_lek;
		
		private EntitySet<Badanie> _Badanies;
		
		private EntityRef<Lekarz> _Lekarz;
		
		private EntityRef<Pacjent> _Pacjent;
		
		private EntityRef<Rejestratorka> _Rejestratorka;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_wizChanging(int value);
    partial void OnID_wizChanged();
    partial void OnDt_rejChanging(System.DateTime value);
    partial void OnDt_rejChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnDt_zakChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_zakChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    partial void OnDiagnozaChanging(string value);
    partial void OnDiagnozaChanged();
    partial void OnID_pacChanging(int value);
    partial void OnID_pacChanged();
    partial void OnID_rejChanging(int value);
    partial void OnID_rejChanged();
    partial void OnID_lekChanging(int value);
    partial void OnID_lekChanged();
    #endregion
		
		public Wizyta()
		{
			this._Badanies = new EntitySet<Badanie>(new Action<Badanie>(this.attach_Badanies), new Action<Badanie>(this.detach_Badanies));
			this._Lekarz = default(EntityRef<Lekarz>);
			this._Pacjent = default(EntityRef<Pacjent>);
			this._Rejestratorka = default(EntityRef<Rejestratorka>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_wiz", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_wiz
		{
			get
			{
				return this._ID_wiz;
			}
			set
			{
				if ((this._ID_wiz != value))
				{
					this.OnID_wizChanging(value);
					this.SendPropertyChanging();
					this._ID_wiz = value;
					this.SendPropertyChanged("ID_wiz");
					this.OnID_wizChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dt_rej", DbType="Date NOT NULL")]
		public System.DateTime Dt_rej
		{
			get
			{
				return this._Dt_rej;
			}
			set
			{
				if ((this._Dt_rej != value))
				{
					this.OnDt_rejChanging(value);
					this.SendPropertyChanging();
					this._Dt_rej = value;
					this.SendPropertyChanged("Dt_rej");
					this.OnDt_rejChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dt_zak", DbType="Date")]
		public System.Nullable<System.DateTime> Dt_zak
		{
			get
			{
				return this._Dt_zak;
			}
			set
			{
				if ((this._Dt_zak != value))
				{
					this.OnDt_zakChanging(value);
					this.SendPropertyChanging();
					this._Dt_zak = value;
					this.SendPropertyChanged("Dt_zak");
					this.OnDt_zakChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NVarChar(MAX)")]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diagnoza", DbType="NVarChar(MAX)")]
		public string Diagnoza
		{
			get
			{
				return this._Diagnoza;
			}
			set
			{
				if ((this._Diagnoza != value))
				{
					this.OnDiagnozaChanging(value);
					this.SendPropertyChanging();
					this._Diagnoza = value;
					this.SendPropertyChanged("Diagnoza");
					this.OnDiagnozaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_pac", DbType="Int NOT NULL")]
		public int ID_pac
		{
			get
			{
				return this._ID_pac;
			}
			set
			{
				if ((this._ID_pac != value))
				{
					if (this._Pacjent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_pacChanging(value);
					this.SendPropertyChanging();
					this._ID_pac = value;
					this.SendPropertyChanged("ID_pac");
					this.OnID_pacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_rej", DbType="Int NOT NULL")]
		public int ID_rej
		{
			get
			{
				return this._ID_rej;
			}
			set
			{
				if ((this._ID_rej != value))
				{
					if (this._Rejestratorka.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_rejChanging(value);
					this.SendPropertyChanging();
					this._ID_rej = value;
					this.SendPropertyChanged("ID_rej");
					this.OnID_rejChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_lek", DbType="Int NOT NULL")]
		public int ID_lek
		{
			get
			{
				return this._ID_lek;
			}
			set
			{
				if ((this._ID_lek != value))
				{
					if (this._Lekarz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_lekChanging(value);
					this.SendPropertyChanging();
					this._ID_lek = value;
					this.SendPropertyChanged("ID_lek");
					this.OnID_lekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Wizyta_Badanie", Storage="_Badanies", ThisKey="ID_wiz", OtherKey="ID_wiz")]
		public EntitySet<Badanie> Badanies
		{
			get
			{
				return this._Badanies;
			}
			set
			{
				this._Badanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lekarz_Wizyta", Storage="_Lekarz", ThisKey="ID_lek", OtherKey="ID_lek", IsForeignKey=true)]
		public Lekarz Lekarz
		{
			get
			{
				return this._Lekarz.Entity;
			}
			set
			{
				Lekarz previousValue = this._Lekarz.Entity;
				if (((previousValue != value) 
							|| (this._Lekarz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lekarz.Entity = null;
						previousValue.Wizytas.Remove(this);
					}
					this._Lekarz.Entity = value;
					if ((value != null))
					{
						value.Wizytas.Add(this);
						this._ID_lek = value.ID_lek;
					}
					else
					{
						this._ID_lek = default(int);
					}
					this.SendPropertyChanged("Lekarz");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pacjent_Wizyta", Storage="_Pacjent", ThisKey="ID_pac", OtherKey="ID_pac", IsForeignKey=true)]
		public Pacjent Pacjent
		{
			get
			{
				return this._Pacjent.Entity;
			}
			set
			{
				Pacjent previousValue = this._Pacjent.Entity;
				if (((previousValue != value) 
							|| (this._Pacjent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pacjent.Entity = null;
						previousValue.Wizytas.Remove(this);
					}
					this._Pacjent.Entity = value;
					if ((value != null))
					{
						value.Wizytas.Add(this);
						this._ID_pac = value.ID_pac;
					}
					else
					{
						this._ID_pac = default(int);
					}
					this.SendPropertyChanged("Pacjent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rejestratorka_Wizyta", Storage="_Rejestratorka", ThisKey="ID_rej", OtherKey="ID_rej", IsForeignKey=true)]
		public Rejestratorka Rejestratorka
		{
			get
			{
				return this._Rejestratorka.Entity;
			}
			set
			{
				Rejestratorka previousValue = this._Rejestratorka.Entity;
				if (((previousValue != value) 
							|| (this._Rejestratorka.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rejestratorka.Entity = null;
						previousValue.Wizytas.Remove(this);
					}
					this._Rejestratorka.Entity = value;
					if ((value != null))
					{
						value.Wizytas.Add(this);
						this._ID_rej = value.ID_rej;
					}
					else
					{
						this._ID_rej = default(int);
					}
					this.SendPropertyChanged("Rejestratorka");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Badanies(Badanie entity)
		{
			this.SendPropertyChanging();
			entity.Wizyta = this;
		}
		
		private void detach_Badanies(Badanie entity)
		{
			this.SendPropertyChanging();
			entity.Wizyta = null;
		}
	}
}
#pragma warning restore 1591
